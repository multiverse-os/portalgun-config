# -*- mode: ruby -*-
# vi: set ft=ruby :

Portal.configure do |config|

  config.host :firefox do |vm|
    vm.hostname = "rubydev"
    vm.category = :multiverse
    vm.subcategory = :app
    vm.ephemeral = true
    vm.cpus = 4 
    vm.ram = 4096
    vm.pinned_cpus = [1,3,5] 
    vm.emulator = :qemu  
    vm.arch = :x86_64
    vm.chipset = :i440fx
    vm.bios = :ovmf
    vm.boot_order = [:vault] 

    vm.add_device :sound do |device|
      device.model = :ich9
    end
    vm.add_device :input do |device|
      device.input_type = :tablet
    end 
    vm.add_device :rng 

    vm.spice do |spice|
      spice.address = "0.0.0.0"
      spice.port = 5900
      spice.tls = true
      spice.password = "test"
      spice.keymap = "en-us"
    end

    vm.add_disk :vault do |disk|
      disk.size = 1024
      disk.read_only = false
      disk.serial = "x"
      disk.filesystem = :ext4
      disk.bus = :virtio
      disk.cache = :none
      disk.io_mode = :native
      disk.discard = :ignore
      disk.detect_zeroes = :off
      disk.image_format = :qcow2
      disk.add_encryption :luks do |encryption|
        encryption.keys = ["path/to/key", "path/2/second/key"]
      end
      disk.add_layer :base do |layer|
        layer.read_only = true
        layer.size = 256 
      end 
    end 

    vm.add_network :virbr0 do |net| 
      net.ports do |port|
        port.allow(22)
        port.allow(80)
        port.allow(8080)
        port.forward("remote.host:8080", "localhost:3000")
      end

      net.ssh do |ssh|
        ssh.keys_only = true
        ssh.root_login = false 
        ssh.port = 22 
        ssh.keep_alive = true
      end

      net.add_device :ens0 do |dev|
        dev.version = 4
        dev.mode = :static 
        dev.model = :virtio
        dev.address = "10.200.200.125"
        dev.dns = "8.8.4.4"
        dev.mac = "00:00:10:20:20:24"
      end
    end

    vm.os :debian do |os|
      os.release = :bullseye

      os.add_user :user do |user|
        user.authorized_keys = [
          "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG9ZZEPytQrgMDEHC641p1W/Wt84dG7Xte9meKbGUAk6 user@host"
        ]
        user.groups = ["kvm"] 
        user.dot_configs do |dot|
          dot.edit :bashrc do |config|
            config.append("alias vim='nvim'")
            config.append("alias ls='ls -lah'")
            config.append("export GOPATH='/home/user/go'")
          end
          dot.edit :gitconfig do |config| 
            config.name = "Your Name"
            config.email = "you@example.com"
          end
          dot.edit :vimrc do |config|
            config.append('" Test comment')
          end
        end
      end

      os.shell "/bin/bash" do |sh|
        sh.run("echo 'hi'")
      end

      os.add_user :cool do |user|
        user.authorized_keys = [
          "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIG9ZZEPytQrgMDEHC641p1W/Wt84dG7Xte9meKbGUAk6 user@host"
        ]
        user.groups = ["kvm"]
      end

      os.package_manager do |pm|
        pm.install = ["vim", "neovim", "curl", "wget", "git", "openssh-server", "tor"]
        pm.remove = [
          "nano", "apache-bin", "baobab", "bluez", "bluez-obexd", "brasero-cdrkit",
          "brasero-common", "bubblewrap", "calf-plugins", "cdrdao", "crda", "cheese-common",
          "cups-pk-helper", "cracklib-runtime", "dvdauthor", "dh-python", "docbook-xml",
          "debian-faq", "emacsen-common", "enchant", "flac", "genisoimage", "gnome-sushi",
          "ghostscript", "javascript-common", "lame", "poppler-data", "samba-libs", "telnet",
          "wireless-regdb", "wpasupplicant", "zietgeist-core"]
        pm.config.append('APT::Get::Install-Recommends "false";')
        pm.config.append('APT::Get::Install-Suggests   "false";')
        pm.repositories do |repositories|
          repositories.main = [
            "deb http://ftp.no.debian.org/debian/ bullseye main", 
            "deb-src http://ftp.no.debian.org/debian/ bullseye main"
          ]
          repositories.security = [
            "deb http://ftp.no.debian.org/debian-security buster/updates main",
            "deb-src http://ftp.no.debian.org/debian-security buster/updates main"
          ]
          repositories.updates = [
            "deb http://ftp.no.debian.org/debian/ buster-updates main",
            "deb-src http://ftp.no.debian.org/debian/ buster-updates main"
          ]
        end
      end

      os.services do |service|
        service.enable("ssh")
      end

      os.filesystem do |fs|
        fs.rm("/home/user/Downloads")
        fs.rm("/home/user/Public")
        fs.rm("/home/user/Templates")
        fs.rm("/home/user/Pictures")
        fs.rm("/home/user/Documents")
        fs.rm("/home/user/Videos")
        fs.rm("/home/user/Music")
        fs.ln("/media/user/Downloads", "/home/user/Downloads")
        fs.mkdir("/home/user/go")

        fs.path :etc do |etc|
          etc.edit :resolvconf do |config|
            config.append("nameserver 212.82.226.212")
            config.append("nameserver 8.8.4.4")
          end
          
          etc.edit :issue do |config|
            config.overwrite("Multiverse OS App VM")
          end

          etc.edit :motd do |config|
            config.overwrite("[Debian 10 GNU/Linux]")
          end

          etc.edit :sysctl do |config|
            config.append("net.ipv4.conf.all.send_redirects = 0")
          end

          etc.edit :crontab do |config|
            config.append("25 6 * * * root test -x do something")
          end

          etc.edit :fstab do |config| 
            config.append("Downloads /media/user/Downloads 9p trans=virtio,9p2000.L,rw,cache=none,nofail 0 0")
          end
        end
      end

      os.kernel do |kernel| 
        kernel.modules = ["p9", "p9net", "p9net_virtio"]
        kernel.paremeters = "quiet nomodeset"
      end

      os.install_profile :default do |profile|
        profile.repository = "github.com/multiverse-os/provisioning/app"
        profile.install("/etc/hosts")
        profile.install("/etc/ssh/sshd")
      end
    end
  end

end
